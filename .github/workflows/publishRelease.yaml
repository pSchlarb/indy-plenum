name: Triggered by Version Bump merged

#disable all tags and enable all brannches and only version file
on:
  push:
    branches-ignore:
      - update-rc-version
      - update-version
    paths:
      - '!**'
      - "plenum/__version__.json"

jobs:
  infos:
    name: infos
    runs-on: ubuntu-latest
    outputs:
      isVersionBump: ${{ steps.get-release-info.outputs.isVersionBump }}
      isPreRelease: ${{ steps.get-release-info.outputs.isRC }}
      versionTag: ${{ steps.get-release-info.outputs.versionTag }}
    steps:
      - name: checkout source code
        uses: actions/checkout@v2
      - name: get-release-info
        id: get-release-info
        uses: ./.github/actions/get-release-info
        with:
          versionString: "${{ github.event.head_commit.message }}"
          
  workflow-setup:
    name: Initialize Workflow
    runs-on: ubuntu-latest
    outputs:
      CACHE_KEY_BUILD: ${{ steps.workflow-setup.outputs.CACHE_KEY_BUILD }}
      UBUNTU_VERSION: ${{ steps.workflow-setup.outputs.UBUNTU_VERSION }}
      # Expose the lowercase version of the GitHub repository name
      # to all subsequent jobs that reference image repositories
      # as the push and pull operations require the URL of the repository
      # to be in lowercase.
      GITHUB_REPOSITORY_NAME: ${{ steps.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      distribution: ${{ steps.workflow-setup.outputs.distribution }}
    steps:
      - name: checkout source code
        uses: actions/checkout@v2
      - name: workflow-setup
        id: workflow-setup
        uses: ./.github/actions/workflow-setup

  lint:
    name: Lint
    needs: [infos]
    if: needs.infos.outputs.isVersionBump == 'true'
    uses: ./.github/workflows/reuseable_lint.yaml


  build-docker-image:
    name: Create Builder Image
    needs: [workflow-setup, lint, infos]
    if: needs.infos.outputs.isVersionBump == 'true'
    uses: ./.github/workflows/reuseable_buildimage.yaml
    with:
      CACHE_KEY_BUILD: ${{ needs.workflow-setup.outputs.CACHE_KEY_BUILD }}
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      UBUNTU_VERSION: ${{ needs.workflow-setup.outputs.UBUNTU_VERSION }}

  plenum_tests:
    name: Test Plenum
    needs: [workflow-setup, infos ,lint, build-docker-image]
    if: needs.infos.outputs.isVersionBump == 'true'
    uses: ./.github/workflows/reuseable_test.yaml
    with:
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      UBUNTU_VERSION: ${{ needs.workflow-setup.outputs.UBUNTU_VERSION }}

  build_packages:
    name: Build Packages
    needs: [workflow-setup, plenum_tests]
    if: needs.infos.outputs.isVersionBump == 'true'
    uses: ./.github/workflows/reuseable_buildpackages.yaml
    with:
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      UBUNTU_VERSION: ${{ needs.workflow-setup.outputs.UBUNTU_VERSION }}
      isDev: 'false'
      isRC: ${{ needs.infos.outputs.isPreRelease }}

  createRelease:
    name: Create Release
    needs: [infos, build_packages]
    if: needs.infos.outputs.isVersionBump == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Plenum Artifacts from Pipeline Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: PreRelease
        uses: softprops/action-gh-release@v1
        if: needs.infos.outputs.isPreRelease == 'true'
        with:
          tag_name: ${{ needs.infos.outputs.VERSIONTAG }}
          prerelease: true
          files: |
            artifacts/**
          generate_release_notes: true
          body: "[${{ needs.infos.outputs.VERSIONTAG }}] "
          target_commitish: ${{github.event.ref}}
          name: "${{ needs.infos.outputs.VERSIONTAG }}"
          token: ${{ secrets.BOT_PR_PAT }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: needs.infos.outputs.isPreRelease == 'false'
        with:
          tag_name: ${{ needs.infos.outputs.VERSIONTAG }}
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/**
          body: "[${{ needs.infos.outputs.VERSIONTAG }}] "
          target_commitish: ${{github.event.ref}}
          name: "${{ needs.infos.outputs.VERSIONTAG }}"
          token: ${{ secrets.BOT_PR_PAT }}

  publish_artifact_preRelease:
    name: Publish Artifacts
    needs: [workflow-setup, infos ,build_packages]
    if: needs.infos.isPreRelease == 'true'
    uses: ./.github/workflows/reuseable_publish_artifacts.yaml
    with:
      COMPONENT: 'rc'
      UBUNTU_VERSION: ${{ needs.workflow-setup.outputs.UBUNTU_VERSION }}
      distribution: ${{ needs.workflow-setup.outputs.distribution }}
    secrets:
      INDY_ARTIFACTORY_REPO_CONFIG: ${{ secrets.INDY_ARTIFACTORY_REPO_CONFIG }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

  publish_artifact:
    name: Publish Artifacts
    needs: [workflow-setup, infos, build_packages]
    if: needs.infos.isPreRelease == 'false'
    uses: ./.github/workflows/reuseable_publish_artifacts.yaml
    with:
      COMPONENT: 'main'
      UBUNTU_VERSION: ${{ needs.workflow-setup.outputs.UBUNTU_VERSION }}
      distribution: ${{ needs.workflow-setup.outputs.distribution }}
    secrets:
      INDY_ARTIFACTORY_REPO_CONFIG: ${{ secrets.INDY_ARTIFACTORY_REPO_CONFIG }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}